# caddy.yml

# Authors: 
#   Andreas RÃ¤der, https://github.com/raederan 
#   Simon Stier, https://github.com/simontaurus

# Begin: Check Ansible User
- name: Check Ansible User
  hosts: "{{ target_hosts | default('all') }}"
  gather_facts: false
  tasks:
    - name: Fail reliably if 'ansible_user' is not defined
      fail:
        msg: "You need to set the right ansible_user in inventory.yml or by using the flag -u <USERNAME> when running the playbook!"
      when: ansible_user is not defined

    - name: Print 'ansible_user'
      debug:
        msg: "ansible_user: {{ ansible_user }}"
      when: ansible_user is defined
# End: Check Ansible User

# Begin: Deploy Caddy
- name: Deploy Caddy
  hosts: "{{ target_hosts | default('all') }}"
  roles:
    - kwoodson.yedit
  tasks:
    - name: Verify SSH connection
      ansible.builtin.wait_for_connection:

    - name: Clone caddy repository
      ansible.builtin.git:
        repo: https://github.com/OpenSemanticWorld/caddy-docker-proxy
        dest: /usr/local/docker-container/caddy-docker-proxy
        version: "main"
        # force: yes

    - name: Ensure folder exists and permissions are set
      ansible.builtin.file:
        path: /usr/local/docker-container/caddy-docker-proxy
        owner: "{{ ansible_user }}"
        state: directory
        mode: 0755

    - name: Copy .env.example to .env
      ansible.builtin.copy:
        src: /usr/local/docker-container/caddy-docker-proxy/.env.example
        dest: /usr/local/docker-container/caddy-docker-proxy/.env
        remote_src: yes
        owner: "{{ ansible_user }}"
        mode: 0644
        force: no
      when: acme_ca is defined and acme_eab_key_id is defined and acme_eab_mac_key is defined

    - name: Create/Replace values by key dict in .env file 
      lineinfile:
        path: /usr/local/docker-container/caddy-docker-proxy/.env
        regexp: "^{{ item.key }}=.*$" 
        line: "{{ item.key }}={{ item.value }}" 
        backrefs: no # yes enables capture groups
      # dict refers to new untracked .env copied from .env.example
      # https://github.com/OpenSemanticLab/docker-compose-osl-wiki/blob/main/.example.env
      # add or change valid key-value pairs to your needs and set vars in inventory.yml
      with_dict: 
        ACME_CA: "{{ acme_ca }}"
        ACME_EAB_KEY_ID: "{{ acme_eab_key_id }}"
        ACME_EAB_MAC_KEY: "{{ acme_eab_mac_key }}"
      when: acme_ca is defined and acme_eab_key_id is defined and acme_eab_mac_key is defined

    - name: Create a network
      docker_network:
        name: caddy

    # - name: Manage docker-compose.yml of caddy-docker-proxy
    #   when: false # we use the default docker-compose.yml for now
    #   yedit:
    #     src: /usr/local/docker-container/caddy-docker-proxy/docker-compose.yml
    #     value:
    #       version: "3.7"
    #       services:
    #         caddy:
    #           image: lucaslorentz/caddy-docker-proxy:ci-alpine
    #           container_name: caddycontainer
    #           ports:
    #             - 80:80
    #             - 443:443
    #           environment:
    #             - CADDY_INGRESS_NETWORKS=caddy
    #           networks:
    #             - caddy
    #           volumes:
    #             - /var/run/docker.sock:/var/run/docker.sock
    #             - caddy_data:/data
    #           restart: unless-stopped
    #       networks:
    #         caddy:
    #           external: true
    #       volumes:
    #         caddy_data: {}

    - name: Create and start caddy service
      community.docker.docker_compose:
        project_src: /usr/local/docker-container/caddy-docker-proxy
      register: caddyproxy

    # - name: Print register variable for debugging
    #   debug:
    #     var: caddyproxy

    - name: Verify if caddy is running
      ansible.builtin.assert:
        that: 
          - "caddyproxy.services.caddy.caddycontainer.state.running"
# End: Deploy Caddy